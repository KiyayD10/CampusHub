// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Model User untuk Dosen dan Mahasiswa
model User {
  id Int @id @default(autoincrement())  // ID unik buat tiap user
  name String                           //Nama lengkap user
  email String @unique                  // Email user, @unique artinya gak boleh ada yang sama
  password String                       //Password diHash (diamanin)
  role String @default("student")       // Peran user, kalau gak diisi otomatis jadi "student
  npm String?                           // Tanda tanya (?) artinya gak wajib diisi (opsional), buat mahasiswa
  phone String?                         // Nomor HP, juga gak wajib diisi
  avatar String?                        // Link ke foto profil, ini juga gk wajib diisi
  createdAt DateTime @default(now())    // Kapan akun dibuat
  updateAt DateTime @updatedAt          // Kapan data user terakhir diubah
}

// Model Task untuk mengatur tugas-tugas kuliah
model Task {
  id Int @id @default(autoincrement())
  title String                            // Untuk judul tugas
  description String? @db.Text            // Deskripsi tugas
  course String?                          // Tugas ini buat mata kuliah apa
  dueDate DateTime                        // Deadline atau tanggal pengumpulan
  priority String @default("medium")      // Tingkat prioritas (low, medium, high)
  status String @default("todo")          // Status pengerjaan
  reminder DateTime?                      // Untuk notif
  createdAt DateTime @default(now())      // Kapan tugas dibuat
  updateAt DateTime @updatedAt            // Kapan tugas terakhir diubah
}

// Model Attendance untuk simpan absen mahasiswa
model Attendance {
  id Int @id @default(autoincrement())
  courseNama String                     // Absen matakuliah apa
  qrHash String                         // QR yang di scan mahasiswa
  latitude Float?                       // Koordinat mahasiswa pas absen 
  longitud Float?                       // Sama aja
  status String @default("present")     // Status absennya apakah(masuk, alpa, telat)
  timesTamp DateTime @default(now())    // Jam berapa dia absen
}